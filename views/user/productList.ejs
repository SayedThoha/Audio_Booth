<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%=title%>
    </title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        body {
            font-family: cursive;
            background-color: #F9F9F9;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        .products-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .product-card {
            width: calc(33.33% - 20px);
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

        .product-image img {
            width: 100%;
            height: auto;
            display: block;
        }

        .product-details {
            padding: 20px;
            flex: 1 1 auto;
        }

        .product-name {
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

        .product-description {
            margin-bottom: 10px;
        }

        .product-price {
            font-weight: bold;
            margin-bottom: 10px;
        }

        .product-buttons {
            display: flex;
            justify-content: space-between;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
            margin: 5px;
        }

        @media screen and (max-width: 768px) {
            .product-card {
                flex-direction: column;
            }

            .product-buttons {
                flex-direction: column;
            }

            .product-buttons button,
            .product-buttons a {
                width: 100%;
                margin-bottom: 10px;
            }
        }

        @media screen and (max-width: 992px) {
            .product-card {
                flex-direction: row;
            }

            .product-details {
                flex: 1;
                margin-left: 20px;
            }
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        /* Breadcrumb styles */
        .breadcrumb {
            padding: 8px 15px;
            margin-bottom: 20px;
            list-style: none;
            background-color: #f9f9f9;
            border-radius: 4px;
        }

        .breadcrumb-item+.breadcrumb-item::before {
            display: inline-block;
            padding-right: 5px;
            padding-left: 5px;
            color: #6c757d;
            content: "/";
        }

        .breadcrumb-item a {
            color: #007bff;
            text-decoration: none;
        }

        .breadcrumb-item a:hover {
            text-decoration: underline;
        }

        /* Optional CSS for styling the toggle switch */
        .form-check-input[type="checkbox"] {
            width: 3rem;
            height: 1.5rem;
            position: relative;
        }

        .form-check-input[type="checkbox"]:before,
        .form-check-input[type="checkbox"]:after {
            content: '';
            position: absolute;
        }

        .form-check-input[type="checkbox"]:before {
            width: 100%;
            height: 100%;
            background-color: #fff;
            border: 1px solid #adb5bd;
            border-radius: 34px;
            transition: background-color 0.3s ease;
        }

        .form-check-input[type="checkbox"]:after {
            top: 0.25rem;
            left: 0.25rem;
            width: 1rem;
            height: 1rem;
            background-color: #fff;
            border: 1px solid #adb5bd;
            border-radius: 50%;
            transition: left 0.3s ease;
        }

        .form-check-input[type="checkbox"]:checked:before {
            background-color: #007bff;
        }

        .form-check-input[type="checkbox"]:checked:after {
            left: calc(100% - 1.25rem);
        }
    </style>
</head>

<body>




    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/home">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Products</li>
                <li class="breadcrumb-item"><a href="/cart">Cart</a></li>
            </ol>
        </nav>
        <h1>
            <%= title %>
        </h1>

        <form class="d-flex align-items-center p-2" id="searchForm">
            <input class="form-control me-2" type="text" placeholder="Search by product name" name="search">
            <button class="btn btn-outline-success" type="submit">Search</button>

            <select class="form-select me-2" name="sort" onchange="this.form.submit()">
                <option value="">Sort by</option>
                <option value="priceLowToHigh">Price: Low to High</option>
                <option value="priceHighToLow">Price: High to Low</option>
                <option value="nameAToZ">Name: A to Z</option>
                <option value="nameZToA">Name: Z to A</option>
                <option value="newest">Newest</option>
            </select>



            <!-- </form> -->
            <!-- <form class="d-flex align-items-center p-2"> -->
            <select class="form-select me-2" name="category" onchange="this.form.submit()">
                <option value="">All Categories</option>
                <% categories.forEach(category=> { %>
                    <option value="<%= category._id %>" <%=category._id==selectedCategory ? 'selected' : '' %> >
                        <%= category.name %>
                    </option>
                    <% }); %>
            </select>
            <!-- Add a checkbox for showing out-of-stock products -->
            <div class="form-check form-switch me-2">
                <input class="form-check-input" type="checkbox" id="showOutOfStock" onchange="toggleOutOfStock()">
                <label class="form-check-label" for="showOutOfStock">Show Out-of-Stock Products</label>
            </div>

        </form>


        <div class="products-container">
            <% products.forEach(product=> { %>
                <div class="product-card">
                    <div class="product-image">
                        <img src="<%= product.images.length > 0 ? product.images[0].url : '/placeholder-image.jpg' %>"
                            alt="Product Image">
                    </div>
                    <div class="product-details">
                        <h2 class="product-name">
                            <%= product.name %>
                        </h2>
                        <p class="product-description">
                            <%= product.description %>
                        </p>
                        <% if (product.offers && product.offers.length> 0) { %>
                            <% product.offers.forEach(offer=> { %>
                                <% if (offer.isActive) { %>
                                    <p style="color: red;" class="product-price">Offer Price: ₹<%= product.price %>
                                            <p class="product-price">orginal Price: ₹<%= product. actualPrice%>
                                            </p>
                                            <p class="product-price">Category Discount: <%= offer.discountPercentage %>%
                                            </p>
                                            <% } %>
                                                <% }); %>
                                                    <% } else { %>
                                                        <p style="color: red;" class="product-price"> Offer Price: ₹<%=
                                                                product.price %>
                                                        </p>
                                                        <p class="product-price">Price: ₹<%= product. actualPrice%>
                                                                <% } %>
                                                                    <div class="product-buttons">
                                                                        <button class="btn btn-primary wishlist-btn"
                                                                            onclick="addToWishlist('<%= product._id %>')">Add
                                                                            to Wishlist</button>
                                                                        <a href="/products/details/<%= product._id %>"
                                                                            class="btn btn-primary">View
                                                                            Details</a>
                                                                        <button class="btn btn-primary"
                                                                            onclick="addToCart('<%= product._id %>')">Add
                                                                            to
                                                                            Cart</button>
                                                                    </div>
                    </div>
                </div>
                <% }); %>
        </div>
        <!-- Add pagination controls below the product container -->
        <div class="pagination p-4">
            <% if (currentPage> 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="btn btn-primary">Previous</a>
                <% } %>

                    <% if (currentPage < totalPages) { %>
                        <a href="?page=<%= currentPage + 1 %>" class="btn btn-primary">Next</a>
                        <% } %>
        </div>

    </div>

    <script>
        async function addToCart(productId) {
            const quantity = 1; // You can let the user specify the quantity if needed
            try {
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity })
                });
                if (response.ok) {
                    // Product added successfully,
                    alert('Product added to cart successfully');
                } else {
                    // Failed to add product, handle the error
                    const data = await response.json();
                    alert(data.message); // Show the error message
                }
            } catch (error) {
                console.error('Error adding product to cart:', error);
                alert('Failed to add product to cart. Please try again later.');
            }
        }

        // function to add to wishlist
        async function addToWishlist(productId) {
            try {
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });
                if (response.ok) {
                    alert('Product added to wishlist successfully');
                } else {
                    const data = await response.json();
                    alert(data.message);
                }
            } catch (error) {
                console.error('Error adding product to wishlist:', error);
                alert('Failed to add product to wishlist. Please try again later.');
            }
        }


        // Function to toggle out-of-stock products
        function toggleOutOfStock() {
            const showOutOfStock = document.getElementById('showOutOfStock').checked;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('showOutOfStock', showOutOfStock);
            window.location.href = window.location.pathname + '?' + urlParams.toString();
        }

        // Function to initialize the toggle switch state
        function initializeToggleSwitch() {
            const urlParams = new URLSearchParams(window.location.search);
            const showOutOfStock = urlParams.get('showOutOfStock');
            if (showOutOfStock === 'true') {
                document.getElementById('showOutOfStock').checked = true;
            } else {
                document.getElementById('showOutOfStock').checked = false;
            }
        }

        // Call initializeToggleSwitch function when the page loads
        window.addEventListener('load', initializeToggleSwitch);


    </script>

</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>

</html>