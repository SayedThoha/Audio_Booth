<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%=title%>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-top: 50px;
            max-width: 700px;

        }

        .footer {
            background-color: #343a40;
            color: #fff;
            text-align: center;
            padding: 20px 0;
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
        }

        .breadcrumb {
            background-color: transparent;
            padding: 0;
            margin-bottom: 30px;
            font-size: 20px;
            border-bottom: 2px solid #343a40;
        }

        .breadcrumb-item+.breadcrumb-item::before {
            content: "/";
            padding: 0 10px;
            color: #777;
        }

        .breadcrumb-item a {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: #0056b3;
        }

        .breadcrumb-item.active {
            color: #343a40;
        }
    </style>
</head>


<body>
    <div class="container-fluid">
        <nav class="navbar bg-dark border-bottom border-body" data-bs-theme="dark">
            <h3 style="color: whitesmoke; " class="mb-4">User Details</h3>
        </nav>

        <!-- Breadcrumbs -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/profile">Profile</a></li>
                <li class="breadcrumb-item active" aria-current="page">Order History</li>
            </ol>
        </nav>
    </div>
    <!-- Display flash message -->

    <% if (message && message.length> 0) { %>
        <div class="flash-message alert alert-danger ">
            <%= message %>
        </div>
        <% } %>

            <div id="profile" class="container mt-5">
                <div class="p-2">
                    <a href="/profile" class="btn btn-primary">Back</a>
                </div>
                <h1 class="mb-4">User Profile</h1>
                <div id="userDetails" class="mb-4">
                    <p><strong>Name:</strong>
                        <%= user.name %>
                    </p>
                    <p><strong>Phone:</strong>
                        <%= user.phone %>
                    </p>
                    <p><strong>Email:</strong>
                        <%= user.email %>
                    </p>

                    <!-- Add more fields as needed -->
                </div>
                <button id="editButton" class="btn btn-primary">Edit Details</button>
                <button id="changePasswordButton" class="btn btn-warning">Change Password</button>
            </div>

            <!-- Edit User Details Form -->
            <div id="editForm" class="container mt-5" style="display: none;">
                <h1 class="mb-4">Edit Details</h1>
                <form id="userForm" action="" method="post">
                    <div class="mb-3">
                        <label for="name" class="form-label">Name:</label>
                        <input type="text" id="name" name="name" value="<%= user.name %>" class="form-control" required>
                        <div id="nameError" class="text-danger"></div> <!-- Error element for name validation -->
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">Mobile Number:</label>
                        <input type="text" id="phone" name="phone" value="<%= user.phone %>" class="form-control"
                            required>
                        <div id="mobileNumberError" class="text-danger"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>

            <!-- Change Password Form -->
            <div id="changePasswordForm" class="container mt-5" style="display: none;">
                <h1 class="mb-4">Change Password</h1>
                <form id="passwordForm" method="post" role="form">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password:</label>
                        <input type="password" id="currentPassword" name="currentPassword" class="form-control"
                            required>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password:</label>
                        <input type="password" id="newPassword" name="newPassword" class="form-control" required>
                    </div>
                    <!-- Display validation errors here -->
                    <div id="passwordError" class="text-danger"></div>
                    <button type="submit" class="btn btn-warning">Change Password</button>
                </form>
            </div>
            <footer class="footer">
                <div class="container-fluid">
                    <!-- Add footer content and links here -->
                    &copy; 2024 Audio Booth. All rights reserved.
                </div>
            </footer>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const editButton = document.getElementById('editButton');
                    const changePasswordButton = document.getElementById('changePasswordButton');
                    const userDetails = document.getElementById('userDetails');
                    const editForm = document.getElementById('editForm');
                    const changePasswordForm = document.getElementById('changePasswordForm');
                    const userForm = document.getElementById('userForm');
                    const passwordForm = document.getElementById('passwordForm');
                    const nameInput = document.getElementById('name'); // Get the name input element
                    const mobileInput = document.getElementById('phone');

                    editButton.addEventListener('click', function () {
                        userDetails.style.display = 'none';
                        editForm.style.display = 'block';
                        changePasswordForm.style.display = 'none'; // Hide change password form
                    });

                    changePasswordButton.addEventListener('click', function () {
                        userDetails.style.display = 'none';
                        editForm.style.display = 'none'; // Hide edit form
                        changePasswordForm.style.display = 'block'; // Show change password form
                    });

                    userForm.addEventListener('submit', function (event) {
                        event.preventDefault();


                        const name = nameInput.value; // Get the name input value
                        const phone = mobileInput.value

                        if (name.trim() === '' || name.length < 3 || name.length > 30) {
                            document.getElementById('nameError').innerText = 'Name must be between 3 and 30 characters';
                            return false;
                        }
                        if (!/^\d{10}$/.test(phone)) {
                            document.getElementById('mobileNumberError').innerText = 'Mobile number must be a 10-digit number';
                            return false;
                        }
                        const formData = new FormData(userForm);
                        fetch('/profile/edit-user', {
                            method: 'POST',
                            // body: formData
                            headers: {
                                'Content-Type': 'application/json' // Set the content type header
                            },
                            body: JSON.stringify(Object.fromEntries(formData))


                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();

                            })
                            .then(data => {
                                if (data.success) {


                                    location.reload();
                                } else {



                                }
                            })
                            .catch(error => {
                                console.error('Error updating user details:', error);

                            });
                    });

                    passwordForm.addEventListener('submit', function (event) {
                        event.preventDefault();

                        const newPassword = document.getElementById('newPassword').value; // Get the new password value

                        // Validate password
                        if (newPassword.length < 8 || !/\d/.test(newPassword) || !/[a-z]/.test(newPassword) || !/[A-Z]/.test(newPassword) || !/[^a-zA-Z0-9]/.test(newPassword) || newPassword.length > 20) {
                            document.getElementById('passwordError').innerText = 'Password must be at least 8 characters long and include at least one lowercase letter, one uppercase letter, one number, and one special character';
                            return;
                        }

                        // Serialize form data into URL-encoded format
                        const formData = new FormData();
                        formData.append('currentPassword', document.getElementById('currentPassword').value);
                        formData.append('newPassword', newPassword);

                        fetch('/profile/change-password', {
                            method: 'POST',

                            headers: {
                                'Content-Type': 'application/json' // Set the content type header
                            },

                            body: JSON.stringify(Object.fromEntries(formData))
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                if (data.success) {

                                    location.reload();
                                } else {
                                    console.error('Password change failed:', data.error);

                                }
                            })
                            .catch(error => {
                                console.error('Error changing password:', error);

                            });
                    });

                });
            </script>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>

</html>